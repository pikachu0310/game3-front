/* tslint:disable */
/* eslint-disable */
/**
 * Game^3 API
 * Game^3 API
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostGameRequest
 */
export interface PostGameRequest {
    /**
     * ブース展示者名
     * @type {string}
     * @memberof PostGameRequest
     */
    creatorName: string;
    /**
     * 所属団体
     * @type {string}
     * @memberof PostGameRequest
     */
    organization?: string;
    /**
     * Twitter ID
     * @type {string}
     * @memberof PostGameRequest
     */
    twitterId?: string;
    /**
     * Webサイト等のURL
     * @type {string}
     * @memberof PostGameRequest
     */
    websiteUrl?: string;
    /**
     * 展示するゲームタイトル
     * @type {string}
     * @memberof PostGameRequest
     */
    title: string;
    /**
     * 展示するゲームのジャンル
     * @type {string}
     * @memberof PostGameRequest
     */
    genre?: string;
    /**
     * ゲームの開発環境
     * @type {string}
     * @memberof PostGameRequest
     */
    developmentEnvironment?: string;
    /**
     * ゲームの説明
     * @type {string}
     * @memberof PostGameRequest
     */
    description?: string;
}

/**
 * Check if a given object implements the PostGameRequest interface.
 */
export function instanceOfPostGameRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "creatorName" in value;
    isInstance = isInstance && "title" in value;

    return isInstance;
}

export function PostGameRequestFromJSON(json: any): PostGameRequest {
    return PostGameRequestFromJSONTyped(json, false);
}

export function PostGameRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostGameRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'creatorName': json['creatorName'],
        'organization': !exists(json, 'organization') ? undefined : json['organization'],
        'twitterId': !exists(json, 'twitterId') ? undefined : json['twitterId'],
        'websiteUrl': !exists(json, 'websiteUrl') ? undefined : json['websiteUrl'],
        'title': json['title'],
        'genre': !exists(json, 'genre') ? undefined : json['genre'],
        'developmentEnvironment': !exists(json, 'developmentEnvironment') ? undefined : json['developmentEnvironment'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function PostGameRequestToJSON(value?: PostGameRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'creatorName': value.creatorName,
        'organization': value.organization,
        'twitterId': value.twitterId,
        'websiteUrl': value.websiteUrl,
        'title': value.title,
        'genre': value.genre,
        'developmentEnvironment': value.developmentEnvironment,
        'description': value.description,
    };
}

